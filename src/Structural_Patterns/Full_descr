1 Адаптер

Для того чтобы совмещать методы и тд разных классов, в основном,
через создание промежуточного класса и интерфейса, который реализуют оба связываемых классов.

2 Мост
разделяет класс или группу классов на реализацию и абстракцию (разные иерархии), чтобы была независимость между абстракцией и реализацией

3 Компоновщик
бизнес-логика обязана быть древоподобной! часто в ГУИ
группируем объекты так, чтобы группа воспринималась как один объект

4 Декоратор
когда наследование не стоит делать :(
похоже на обертку, в которую оборачивается класс для добавления нового функционала (делегирования этого функционала)

5 Фасад
создаем простой интерфейс к сложной системе множестве классов
позволяет снизить общую сложность программы и помогает вынести код, зависимый от внешней системы, в единственное место

6 Легковес
экономит память, разделяя общее состояние объектов между собой, вместо хранения одинаковых данных в каждом объекте.
ссылается на общие обьекты для хранения памяти
Всё внутреннее состояние легковес должен получать через параметры конструктора. Он не должен иметь сеттеров и публичных полей.

7 Заместитель
прослойка между клиентом и реальным сервисным объектом
перехватывает команды к объекту чтобы совершить чтото до или после передачи команды нужному классу